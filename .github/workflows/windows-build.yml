name: Build Windows Software

on:
  push:
    branches: 
      - "main"
    paths:
      - services/converter-sw/**
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13.2'

      - name: Install dependencies
        run: |
          choco install libreoffice tesseract ghostscript 7zip gtk-runtime winrar -y
          pip install -r ./services/converter/requirements.txt
      
      - name: Copy CairoSVG DLLs from gtk-runtime
        shell: bash
        run: |
          mkdir -p cairosvg
          cp "/c/Program Files (x86)/GTK2-Runtime/bin/"*.dll cairosvg/
      
      - name: Copy RAR
        shell: bash
        run: |
          mkdir -p rar
          cp "/c/Program Files/WinRAR/"* rar/

      - name: Download FFmpeg static build
        shell: bash
        run: |
          curl -L -o ffmpeg.zip https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip
          unzip ffmpeg.zip
          mkdir -p ffmpeg-bin
          cp ffmpeg-*/bin/ffmpeg.exe ffmpeg-bin/
                
      - name: Copy LibreOffice program directory (bash)
        shell: bash
        run: |
          mkdir -p libreoffice
          cp -r "/c/Program Files/LibreOffice/"/* libreoffice/

      - name: Copy Tesseract executable (bash)
        shell: bash
        run: |
          mkdir -p tesseract-bin
          cp -r "/c/Program Files/Tesseract-OCR"/* tesseract-bin/
      
      - name: Copy Ghostscript binary (bash)
        shell: bash
        run: |
          mkdir -p ghostscript
          cp -r "/c/Program Files/gs/gs"*/* ghostscript/
      - name: Copy 7-Zip binary (Windows)
        shell: bash
        run: |
          mkdir -p 7zip
          cp -r "/c/Program Files/7-Zip"/* 7zip/
      
      - name: Copy Converter and Converter-sw
        shell: bash
        run: |
          mkdir -p build_app
          cp -r services/converter build_app/converter
          cp -r services/converter-sw build_app/converter-sw
      
      - name: Build app (Windows)
        run: |
          cd build_app
          pyinstaller \
            --noconfirm --clean --console --name app \
            --onefile --log-level DEBUG \
            --paths=converter \
            --paths=converter-sw \
            --add-data "converter-sw\\build;build" \
            --add-data "../libreoffice;dependencies/libreoffice" \
            --add-data "../tesseract-bin;dependencies/tesseract-ocr" \
            --add-data "../ffmpeg-bin/ffmpeg.exe;dependencies" \
            --add-data "../ghostscript;dependencies/ghostscript" \
            --add-data "../7zip;dependencies/7zip" \
            --add-data "../cairosvg;dependencies/cairosvg" \
            --add-data "../rar;dependencies/rar" \
            --distpath ../proc converter-sw/main.py
        shell: bash
      
      - name: Build launcher exe
        shell: bash
        run: |
          cd build_app
          pyinstaller --onefile --windowed  --name convertMaster \
          --icon=converter-sw/resources/logo.ico \
          --version-file=converter-sw/resources/version.txt \
          --paths=converter \
          --paths=converter-sw \
          --add-data "converter-sw/resources/logo.jpg;resources" \
          --add-data "../proc/app.exe;." \
          --distpath ../output/windows converter-sw/launcher.py

      
      - name: Upload Windows build artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: ./output/windows/*