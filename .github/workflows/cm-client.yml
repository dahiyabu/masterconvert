name: Build and Deploy to CM-Client

on:
  push:
    branches: [ "main" ]
    paths:
      services/client/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Build the Docker image
        run: docker build -f services/client/Dockerfile -t cmclient:latest .

      - name: Save Docker image to tarball
        run: docker save cmclient:latest -o cmclient.tar

      - name: Move image to temporary directory
        run: mkdir -p upload-cm && mv cmclient.tar upload-cm/ && chmod -R 755 upload-cm

      - name: Copy Docker image to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_HOST_KEY }}
          passphrase: ${{ secrets.DEPLOY_HOST_KEY_PASSPHRASE }}
          source: "upload-cm/*"
          target: "/var/tmp/"
          port: 22
          timeout: 30s
          command_timeout: 10m
          use_insecure_cipher: false
          rm: false
          debug: false
          strip_components: 0
          overwrite: true  # ensures overwrite of existing file
          tar_dereference: false

      - name: Copy compose file to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_HOST_KEY }}
          passphrase: ${{ secrets.DEPLOY_HOST_KEY_PASSPHRASE }}
          source: "./services/client/docker-compose.yml"
          target: "~/"
      - name: Deploy Docker image on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_HOST_KEY }}
          passphrase: ${{ secrets.DEPLOY_HOST_KEY_PASSPHRASE }}
          script: |
            docker network create converter-network || echo "converter-network already exists"
            docker load -i /var/tmp/upload-cm/cmclient.tar
            
            sed "s/CM_APP_API_URL_VALUE/http:\/\/178.16.143.20:9081\/api/g" ~/services/client/docker-compose.yml > ~/services/client/compose.yml
            mkdir -p /var/tmp/convertMaster/logs

            if [[ `docker ps|grep cmclient` ]]; then
             container_id=`docker ps |grep cmclient|awk '{print $1}'`
             docker stop $container_id
             docker rm $container_id
            fi
            docker rmi cmclient:latest || echo "No old dev image found to remove"
            
            docker compose -f ~/services/client/compose.yml up -d 2>/var/tmp/convertMaster/logs/cmclient_stderr.log 1>/var/tmp/convertMaster/logs/cmclient_stdout.log
            
            elapsed_time=0

            while ! docker ps | grep -q cmclient && [ $elapsed_time -lt 300 ]; do
              echo "Waiting for cmclient container to start..."
              sleep 20
              elapsed_time=$((elapsed_time + 20))
            done

            if [ $elapsed_time -ge 300 ]; then
              echo "Timeout reached! Container did not start after 300 seconds."
              exit 1  # Fail the job if the container did not start
            fi
            echo "Container is up and running!"
            
            rm -rf ~/services/client
            rm -rf /var/tmp/upload-cm